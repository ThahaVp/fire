<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />

    <link href="/stylesheets/style.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.1/css/bulma.min.css" />
    <link href="/stylesheets/bootstrap.min.css" rel="stylesheet" />
    <script src="/javascripts/scripts.js"></script>
    <script src="/javascripts/bootstrap.bundle.min.js"></script>
</head>


<body>


    <div class="d-flex" id="wrapper">
        <!-- Sidebar-->
        <div class="border-end bg-white" id="sidebar-wrapper">
            <div class="sidebar-heading border-bottom bg-light">Bytes Online</div>
            <div class="list-group list-group-flush">
                <a class="list-group-item list-group-item-action list-group-item-dark p-3" href="">Home</a>
                <a class="list-group-item list-group-item-action list-group-item-light p-3" href="">Orders</a>
                <a class="list-group-item list-group-item-action list-group-item-light p-3" href="">Settings</a>
                <a class="list-group-item list-group-item-action list-group-item-light p-3" href="">Logout</a>
            </div>
        </div>
        <!-- Page content wrapper-->
        <div id="page-content-wrapper">
            <!-- Top navigation-->
            <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
                <div class="container-fluid">
                    <button class="btn" id="sidebarToggle"><span class="navbar-toggler-icon"></span></button>

                </div>
            </nav>
            <!-- Page content-->

            <div class="container-fluid">
                <div class="col-12 col-xl-6 card mt-3 p-3">

                    <h3 style="margin-top: -5px;margin-bottom: 0">{{data.title}}</h3>
                    <p>{{data.place}}, {{data.an}}</p>


                    <div style="display: flex;" class="mt-1">
                        {{#if data.sta}}
                        <div class="online-indicator">
                            <span class="blink"></span>
                        </div>
                        <div>
                            <p class="online-text">Open Now</p>
                            <p class="text-muted sub-sup-font-size">Ready to recieve orders</p>
                        </div>
                        {{else}}
                        <div style="display: flex;" class="mt-3">
                            <div class="offline-indicator">

                            </div>
                            <p class="offline-text">Closed now</p>
                        </div>
                        {{/if}}

                    </div>
                </div>



                <h5 class="mt-4" style="margin:0">Recent Orders</h5>
                <div class="row mb-5" id="recent_div">

                

                </div>




            </div>
        </div>
    </div>

</body>

<script type="module">

navigator.usb.getDevices()
.then(devices => {
  console.log("Total devices: " + devices.length);
  devices.forEach(device => {
    console.log("Product name: " + device.productName + ", serial number " + device.serialNumber);
  });
});

    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.8.3/firebase-app.js";

    const firebaseConfig = {
        apiKey: "AIzaSyBIsVx80337bB2Gh4UErdMI1EQOYcMQKRc",
        authDomain: "delivery-58fd5.firebaseapp.com",
        databaseURL: "https://delivery-58fd5.firebaseio.com",
        projectId: "delivery-58fd5",
        storageBucket: "delivery-58fd5.appspot.com",
        messagingSenderId: "857232688316",
        appId: "1:857232688316:web:ea4e941c12977ed7e2bcb9",
        measurementId: "G-8XZYSTFQFJ"
    };

    const app = initializeApp(firebaseConfig);
    import { getDatabase, ref, onValue, get, child }
        from "https://www.gstatic.com/firebasejs/9.8.3/firebase-database.js"

    const db = getDatabase();
    let refString = "Area/{{data.area}}/shop_order/{{data.rid}}"
    const Ref = ref(db, refString);

    onValue(Ref, (snapshot) => {
        let keysObj = snapshot.val()
        if (keysObj != null) {
            var keysArray = []
            let keys = Object.keys(keysObj)
            if (keys.length > 0) {
                for (var i = 0; i < keys.length; i++) {
                    if ('key' in keysObj[keys[i]]) {
                        keysArray.push(keysObj[keys[i]].key)
                    }
                    else
                    {
                        keysArray.push(keysObj[keys[i]])
                    }
                }
                keysArray.reverse()


                let mm = getRecentOrders(keysArray.slice(0,10), "{{data.area}}")
                mm.then(function (result) {
                    if (result != null)
                    {
                        setTimeout(function(){
                            displayOrder(result)
                    },1000)
                        
                    }
                    else
                    {

                    }
                })
            }
            else {
                document.getElementById("recent_div").innerHTML = '<div class="col-12 mt-5 text-center"><p class="text-muted">No Recent Orders</p></div>'
            }
        }
        else {
            document.getElementById("recent_div").innerHTML = '<div class="col-12 mt-5 text-center"><p class="text-muted">No Recent Orders</p></div>'
        }
    });

    function displayOrder(array)
    {
        const targetDiv = document.getElementById("recent_div");
        for (var i=0;i<array.length;i++)
        {
            let obc = array[i]
            var foodString = ""
            let foodArray = JSON.parse(obc.food)
            for (var y=0;y<foodArray.length;y++)
            {
                let to = foodArray[y].Qty * foodArray[y].Price
                foodString += foodArray[y].Qty + " X " + foodArray[y].Title + " - &#8377;"+ to +"<br>"
                console.log(foodArray[y])
            }
            targetDiv.innerHTML += '<div class="col-12  col-lg-6 mt-2 order-div"><div class="card mt-4"><div class="card-body"><div class="d-flex justify-content-between"><p class="text-muted" style="font-size: 12px !important;">'+ obc.date +'<br>'+obc.time+'</p><p>&#8377; '+ obc.item_total +'</p></div><p>'+ foodString +'</p><div class="d-flex justify-content-center mt-4"><input type="button" class="btn btn-primary" value="Accept Order"></div></div></div></div>';
        }
    }


    async function getRecentOrders(keyArray, area) {
        var orderList = []
        for (var i = 0; i < keyArray.length; i++) {
            let ss = 'Area/' + area + '/orders/' + keyArray[i]
            const dbRef = ref(getDatabase());
            get(child(dbRef, ss)).then((snapshot) => {
                if (snapshot.exists()) {
                    let obb = snapshot.val()
                    obb.key = snapshot.key
                    orderList.push(obb)
                }
            }).catch((error) => {
                console.error(error);
            });

        }
        return orderList
    }

</script>



</html>